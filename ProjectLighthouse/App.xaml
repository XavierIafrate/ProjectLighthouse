<Application x:Class="ProjectLighthouse.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProjectLighthouse"
             xmlns:views="clr-namespace:ProjectLighthouse.View"
             xmlns:AssemblyViews="clr-namespace:ProjectLighthouse.View.AssemblyViews"
             xmlns:vms="clr-namespace:ProjectLighthouse.ViewModel"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <FontFamily x:Key="ProximaNova">pack://application:,,,/Resources/Font/proximanova.ttf#Proxima Nova</FontFamily>
        <!--#region Colours-->
        <SolidColorBrush x:Key="materialPrimary" Color="#6200EE"/>
        <SolidColorBrush x:Key="materialPrimaryVar" Color="#3700B3"/>
        <SolidColorBrush x:Key="materialSecondary" Color="#03DAC6"/>
        <SolidColorBrush x:Key="materialSecondaryVar" Color="#018786"/>
        <SolidColorBrush x:Key="materialPrimaryGreen" Color="#009688"/>
        <SolidColorBrush x:Key="materialPrimaryGreenVar" Color="#00695C"/>
        <SolidColorBrush x:Key="materialPrimaryBlue" Color="#0277BD"/>
        <SolidColorBrush x:Key="materialPrimaryBlueVar" Color="#01579B"/>

        <SolidColorBrush x:Key="materialBackground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="materialSurface" Color="#fafafa"/>
        <SolidColorBrush x:Key="materialError" Color="#B00020"/>
        <SolidColorBrush x:Key="materialErrorVar" Color="#e5002a"/>
        
        <SolidColorBrush x:Key="materialOnPrimary" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="materialOnSecondary" Color="#000000"/>
        <SolidColorBrush x:Key="materialOnBackground" Color="#000000"/>
        <SolidColorBrush x:Key="materialOnSurface" Color="#000000"/>
        <SolidColorBrush x:Key="materialOnError" Color="#FFFFFF"/>

        <SolidColorBrush x:Key="materialYellow" Color="#ffff71"/>
        <SolidColorBrush x:Key="materialBlue" Color="#96e7f1"/>
        <SolidColorBrush x:Key="materialGreen" Color="#03DAC6"/>

        <LinearGradientBrush x:Key="gradGood" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#1D976C" Offset="0" />
            <GradientStop Color="#93F9B9" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="gradBad" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#cb2d3e" Offset="0" />
            <GradientStop Color="#ef473a" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="gradBlue" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#1e3c72" Offset="0" />
            <GradientStop Color="#2a5298" Offset="1" />

        </LinearGradientBrush>
        <!--#endregion-->
        
        <!--#region Custom Text Styles-->

        <Style TargetType="TextBlock" x:Key="heroTextStyle">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource materialSecondary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="subtitleTextStyle">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}"/>
            <Setter Property="Margin" Value="0,5,30,5"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="subsubtitleTextStyle">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="accentTextStyle">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource materialPrimary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="bodyTextStyle">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
        </Style>
        <!--#endregion-->

        <!--#region Control style overrides-->
        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        CornerRadius="2"
                        BorderThickness="1">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="#6200EE"/>
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="#6200EE"/>
                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
                        CornerRadius="2,0,0,2"
                        Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="#FFFFFF"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="#FFFFFF"/>
                    </Path.Fill>
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border"
                            Property="BorderBrush"
                            Value="#aaaaaa"/>
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="#aaaaaa"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
                      Focusable="False"
                      Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource materialPrimaryBlueVar}"
                            Opacity="0.3"
                            CornerRadius="4"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>

            <!--<Setter Property="Width" Value="14"/>-->
            <Setter Property="Margin" Value="0 0 0 0" />
            <!--<Setter Property="MinWidth" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Border Padding="0,4">
                                <Track x:Name="PART_Track"
                                       IsDirectionReversed="true"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       Width="8"
                                       HorizontalAlignment="Center">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">

                    --><!-- Rotate the ScrollBar from Vertical to Horizontal --><!--
                    <Setter Property="LayoutTransform" TargetName="ScrollBarThumb">
                        <Setter.Value>
                            <RotateTransform Angle="90"/>
                        </Setter.Value>
                    </Setter>

                    --><!-- Change Track Orientation back to Vertical -->
                    <!--<Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                    <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="false"/>-->

                    <!-- Change the commands to do Horizontal commands -->
                    <!--<Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="DecreaseRepeat"/>
                    <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="IncreaseRepeat"/>
                    <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                    <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>--><!--

                </Trigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="{x:Type ComboBox}"
       TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
                     Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="MinWidth"
                    Value="120" />
            <Setter Property="MinHeight"
                    Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="3,3,23,3"
                                            VerticalAlignment="Stretch"
                                            HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                                       Style="{x:Null}"
                                       Template="{StaticResource ComboBoxTextBox}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Bottom"
                                       Margin="3,3,23,3"
                                       Focusable="True"
                                       Background="White"
                                       Visibility="Hidden"
                                       IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="False"
                                    Focusable="False"
                                    PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      Background="White">
                                    <Border x:Name="DropDownBorder"
                                            BorderThickness="1" 
                                            BorderBrush="DodgerBlue"/>
                                    <ScrollViewer Margin="4,6,4,6"
                                                SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#A826A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#99006CD9"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#99006CD9"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource materialPrimary}"/>
            <Setter Property="FontFamily" Value="/Resources/Font/#Proxima Nova"/>
            <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="12"
                                Height="24"
                                BorderThickness="0"
                                Padding="10,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryVar}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GreenButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource materialPrimaryGreen}"/>
            <Setter Property="FontFamily" Value="/Resources/Font/#Proxima Nova"/>
            <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="12"
                                Height="24"
                                BorderThickness="0"
                                Padding="20,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryGreenVar}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CancelButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource materialError}"/>
            <Setter Property="FontFamily" Value="/Resources/Font/#Proxima Nova"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="12"
                                Height="24"
                                BorderThickness="0"
                                Padding="20,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialErrorVar}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        
        <!--#region Views-->
        <DataTemplate DataType="{x:Type vms:RequestViewModel}">
            <views:RequestView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:NewRequestViewModel}">
            <views:NewRequestView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:MachineStatsViewModel}">
            <views:MachineStatsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:OrderViewModel}">
            <views:OrderView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:ScheduleViewModel}">
            <views:ScheduleView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:DeliveriesViewModel}">
            <views:DeliveriesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:AssemblyOrdersViewModel}">
            <AssemblyViews:AssemblyOrdersView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:AssemblyProductsViewModel}">
            <AssemblyViews:AssemblyProductsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:BillOfMaterialsViewModel}">
            <AssemblyViews:BillOfMaterialsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:AnalyticsViewModel}">
            <views:AnalyticsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:ManageUsersViewModel}">
            <views:ManageUsersView/>
        </DataTemplate>
        <!--#endregion-->
        
        <Style TargetType="{x:Type UserControl}">
            <Setter Property="FontFamily"
            Value="Resources/Font/#Proxima Nova"/>
        </Style>
        
    </Application.Resources>
</Application>
