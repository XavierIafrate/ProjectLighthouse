<Application
    x:Class="ProjectLighthouse.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AssemblyViews="clr-namespace:ProjectLighthouse.View.AssemblyViews"
    xmlns:local="clr-namespace:ProjectLighthouse"
    xmlns:views="clr-namespace:ProjectLighthouse.View"
    xmlns:vms="clr-namespace:ProjectLighthouse.ViewModel">

    <Application.Resources>

        <!--#region Colours-->
        <SolidColorBrush x:Key="materialPrimary" Color="#6200EE" />
        <SolidColorBrush x:Key="materialPrimaryVar" Color="#3700B3" />
        <SolidColorBrush x:Key="materialSecondary" Color="#03DAC6" />
        <SolidColorBrush x:Key="materialSecondaryVar" Color="#018786" />
        <SolidColorBrush x:Key="materialPrimaryGreen" Color="#009688" />
        <SolidColorBrush x:Key="materialPrimaryGreenVar" Color="#00695C" />
        <SolidColorBrush x:Key="materialPrimaryBlue" Color="#0277BD" />
        <SolidColorBrush x:Key="materialPrimaryBlueVar" Color="#01579B" />

        <SolidColorBrush x:Key="materialBackground" Color="#FFFFFF" />
        <SolidColorBrush x:Key="materialSurface" Color="#fafafa" />
        <SolidColorBrush x:Key="materialError" Color="#B00020" />
        <SolidColorBrush x:Key="materialErrorVar" Color="#e5002a" />

        <SolidColorBrush x:Key="materialOnPrimary" Color="#FFFFFF" />
        <SolidColorBrush x:Key="materialOnSecondary" Color="#000000" />
        <SolidColorBrush x:Key="materialOnBackground" Color="#000000" />
        <SolidColorBrush x:Key="materialOnSurface" Color="#000000" />
        <SolidColorBrush x:Key="materialOnError" Color="#FFFFFF" />

        <SolidColorBrush x:Key="materialYellow" Color="#ffff71" />
        <SolidColorBrush x:Key="materialBlue" Color="#96e7f1" />
        <SolidColorBrush x:Key="materialGreen" Color="#03DAC6" />

        <SolidColorBrush x:Key="disabledGray" Color="#aaaaaa" />

        <LinearGradientBrush x:Key="gradGood" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#1D976C" />
            <GradientStop Offset="1" Color="#93F9B9" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="gradBad" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#cb2d3e" />
            <GradientStop Offset="1" Color="#ef473a" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="gradBlue" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#1e3c72" />
            <GradientStop Offset="1" Color="#2a5298" />
        </LinearGradientBrush>
        <!--#endregion-->

        <!--#region Custom Text Styles-->

        <Style x:Key="heroTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="Margin" Value="0,0,0,5" />
            <Setter Property="FontWeight" Value="Bold" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource materialSecondary}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="subtitleTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}" />
            <Setter Property="Margin" Value="0,5,30,5" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="subsubtitleTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>

        <Style x:Key="accentTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Margin" Value="0,0,0,2" />
            <Setter Property="FontStyle" Value="Italic" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource materialPrimary}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="bodyTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Margin" Value="0,0,0,2" />
        </Style>

        <Style x:Key="windowTitleTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource materialOnBackground}" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="Margin" Value="0,0,0,20" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="ghostTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource disabledGray}" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="Padding" Value="8,2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <!--#endregion-->

        <!--#region Control style overrides-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    BorderThickness="1"
                    CornerRadius="2">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="#6200EE" />
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="#6200EE" />
                    </Border.Background>
                </Border>
                <Border
                    Grid.Column="0"
                    Margin="1"
                    CornerRadius="2,0,0,2">
                    <Border.Background>
                        <SolidColorBrush Color="#FFFFFF" />
                    </Border.Background>
                </Border>
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="#FFFFFF" />
                    </Path.Fill>
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="BorderBrush" Value="#aaaaaa" />
                    <Setter TargetName="Border" Property="Background" Value="#aaaaaa" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border
                x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
        </ControlTemplate>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            x:Name="rectangle"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{StaticResource materialPrimaryBlueVar}"
                            CornerRadius="4"
                            Opacity="0.3"
                            SnapsToDevicePixels="True" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />

            <!--<Setter Property="Width" Value="14"/>-->
            <Setter Property="Margin" Value="0,0,0,0" />
            <!--<Setter Property="MinWidth" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Border Padding="0,4">
                                <Track
                                    x:Name="PART_Track"
                                    Width="8"
                                    HorizontalAlignment="Center"
                                    IsDirectionReversed="true"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Padding" Value="4,2" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{StaticResource materialPrimary}" />
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource disabledGray}" />
                                <Setter Property="Foreground" Value="{StaticResource disabledGray}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource materialPrimaryVar}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource materialSecondary}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Padding" Value="4,2" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{StaticResource materialPrimary}" />
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource disabledGray}" />
                                <Setter Property="Foreground" Value="{StaticResource disabledGray}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource materialPrimaryVar}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource materialSecondary}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="4,2" />
        </Style>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                x:Name="ToggleButton"
                                Grid.Column="2"
                                ClickMode="Press"
                                Focusable="false"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Template="{StaticResource ComboBoxToggleButton}" />
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Background="White"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                Visibility="Hidden" />
                            <Popup
                                x:Name="Popup"
                                AllowsTransparency="False"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Grid
                                    x:Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="White"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        x:Name="DropDownBorder"
                                        BorderBrush="DodgerBlue"
                                        BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#A826A0DA" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#A826A0DA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#3D26A0DA" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FF26A0DA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#99006CD9" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#99006CD9" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#3DDADADA" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FFDADADA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FF26A0DA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="#FF26A0DA" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FF26A0DA" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource materialPrimary}" />
            <Setter Property="FontFamily" Value="/Resources/Font/#Proxima Nova" />
            <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="10,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="24"
                            Padding="10,0"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryVar}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SubtleButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource materialPrimaryBlue}" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="18"
                            Padding="10,0"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="9">
                            <ContentPresenter
                                Margin="0,0,0,1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryBlue}" />
                    <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SubtleGreenButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource materialPrimaryGreen}" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="18"
                            Padding="10,0"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="9">
                            <ContentPresenter
                                Margin="0,0,0,1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryGreen}" />
                    <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernGreenButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource materialPrimaryGreen}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="10,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="30"
                            Padding="15,2,15,3"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryGreen}" />
                    <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryGreenVar}" />
                    <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource disabledGray}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GreenButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource materialPrimaryGreen}" />
            <Setter Property="FontFamily" Value="/Resources/Font/#Proxima Nova" />
            <Setter Property="Foreground" Value="{StaticResource materialOnPrimary}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="10,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="24"
                            Padding="20,0"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialPrimaryGreenVar}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CancelButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource materialError}" />
            <Setter Property="FontFamily" Value="/Resources/Font/#Proxima Nova" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="10,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="24"
                            Padding="20,0"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource materialErrorVar}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region Views-->
        <DataTemplate DataType="{x:Type vms:RequestViewModel}">
            <views:RequestView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:NewRequestViewModel}">
            <views:NewRequestView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:MachineStatsViewModel}">
            <views:MachineStatsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:OrderViewModel}">
            <views:OrderView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:ScheduleViewModel}">
            <views:ScheduleView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:DeliveriesViewModel}">
            <views:DeliveriesView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:AssemblyOrdersViewModel}">
            <AssemblyViews:AssemblyOrdersView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:AssemblyProductsViewModel}">
            <AssemblyViews:AssemblyProductsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:BillOfMaterialsViewModel}">
            <AssemblyViews:BillOfMaterialsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:AnalyticsViewModel}">
            <views:AnalyticsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:ManageUsersViewModel}">
            <views:ManageUsersView />
        </DataTemplate>
        <!--#endregion-->

        <Style TargetType="{x:Type UserControl}">
            <Setter Property="FontFamily" Value="Resources/Font/#Proxima Nova" />
        </Style>

    </Application.Resources>
</Application>
